apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: ss-utopia-card
  name: ss-utopia-card
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ss-utopia-card
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/mynetwork: "true"
        io.kompose.service: ss-utopia-card
    spec:
      containers:
      - env:
        - name: eureka.client.serviceUrl.defaultZone
          value: http://ss-utopia-eureka:8761/eureka/
        image: 422288715120.dkr.ecr.us-east-1.amazonaws.com/ss-utopia-card:latest
        #image: jbnilles/test-card4:latest
        imagePullPolicy: ""
        name: ss-utopia-card
        ports:
        - containerPort: 8083
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}


apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: ss-utopia-card
  name: ss-utopia-card
spec:
  ports:
  - name: "8083"
    port: 8083
    targetPort: 8083
  selector:
    io.kompose.service: ss-utopia-card
status:
  loadBalancer: {}
